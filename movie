def create_movies_file():
    with open("movies.txt", "w") as file:
        file.write("Cat on a Hot Tin Roof\n")
        file.write("On the Waterfront\n")
        file.write("Monty Python and the Holy Grail\n")

def display_menu():
    print("\nMovie List Management")
    print("----------------------")
    print("1. Display all movie titles")
    print("2. Add a movie title")
    print("3. Delete a movie title")
    print("4. Exit")

def load_movies():
    with open("movies.txt", "r") as file:
        movies = file.readlines()
    return [movie.strip() for movie in movies]  # Strip newline characters

def display_movies(movies):
    print("\nMovie List:")
    for idx, movie in enumerate(movies, start=1):
        print(f"{idx}. {movie}")

def add_movie(movies):
    new_movie = input("Enter the title of the movie to add: ")
    movies.append(new_movie)
    write_movies_to_file(movies)
    display_movies(movies)

def delete_movie(movies):
    try:
        movie_number = int(input("Enter the number of the movie to delete: ")) - 1
        if 0 <= movie_number < len(movies):
            del movies[movie_number]
            write_movies_to_file(movies)
            display_movies(movies)
        else:
            print("Invalid movie number. Please try again.")
    except ValueError:
        print("Invalid input. Please enter a valid number.")

def write_movies_to_file(movies):
    with open("movies.txt", "w") as file:
        for movie in movies:
            file.write(movie + "\n")

def main():
    create_movies_file()  # Ensure the file exists
    movies = load_movies()
    
    while True:
        display_menu()
        command = input("Enter your choice: ")
        
        if command == "1":
            display_movies(movies)
        elif command == "2":
            add_movie(movies)
        elif command == "3":
            delete_movie(movies)
        elif command == "4":
            print("Exiting the program. Goodbye!")
            break
        else:
            print("Invalid command. Please try again.")

if __name__ == "__main__":
    main()
